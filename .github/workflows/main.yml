#---------------------------------------------------------------------
# GitHub Action Workflow to Deploy 
#
# Version      Date        Info
# 1.0          2023        Initial Version
#
# Made by Copyright (c) 2023 Андрей Валетов
#---------------------------------------------------------------------

name: CI-CD-grafany-test

# env:
#   EB_PACKAGE_S3_BUCKET_NAME : "zzz.Final_certification-app"
#   EB_APPLICATION_NAME       : "MyFinal_certification"
#   EB_ENVIRONMENT_NAME       : "MyFinal_certification-env"
#   DEPLOY_PACKAGE_NAME       : "Final_certification-app-${{ github.sha }}.zip"
#   AWS_REGION_NAME           : "us-west-2"

on: 
  push:
    branches: 
      - main

jobs:
    my_ci_pipeline:
       runs-on: self-hosted
       
       steps:
         - name: Git clone our repository
           uses: actions/checkout@v1
            
         # - name: Create ZIP deployment package
         #   run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*
           
         # - name: Configure my AWS Credentils
         #   uses: aws-actions/configure-aws-credentials@v1
         #   with:
         #     aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
         #     aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
         #     aws-region           : ${{ env.AWS_REGION_NAME }}

         # - name: Copy our Deployment package to S3 bucket
         #   run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
         
         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"
           
    my_cd_pipeline:
       runs-on: self-hosted
       needs: [my_ci_pipeline]
       
       steps:
    #      - name: Configure my AWS Credentils
    #        uses: aws-actions/configure-aws-credentials@v1
    #        with:
    #          aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
    #          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
    #          aws-region           : ${{ env.AWS_REGION_NAME }}
         
    #      - name: Create new ElasticBeanstalk Applicaiton Version
    #        run : |
    #         aws elasticbeanstalk create-application-version \
    #         --application-name ${{ env.EB_APPLICATION_NAME }} \
    #         --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
    #         --version-label "Ver-${{ github.sha }}" \
    #         --description "CommitSHA-${{ github.sha }}"

    #      - name: Deploy our new Application Version
    #        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
           
         - name: Print nice message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully"  
